<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xingguang.customer.repymt.mapper.RepymtPlanMapper">
  <resultMap id="BaseResultMap" type="com.xingguang.customer.repymt.entity.RepymtPlan">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="wdrl_id" jdbcType="BIGINT" property="wdrlId" />
    <result column="cus_user_id" jdbcType="BIGINT" property="cusUserId" />
    <result column="term" jdbcType="INTEGER" property="term" />
    <result column="principal" jdbcType="DECIMAL" property="principal" />
    <result column="interest" jdbcType="DECIMAL" property="interest" />
    <result column="plan_date" jdbcType="DATE" property="planDate" />
    <result column="actual_date" jdbcType="DATE" property="actualDate" />
    <result column="penalty" jdbcType="DECIMAL" property="penalty" />
    <result column="overdue_days" jdbcType="INTEGER" property="overdueDays" />
    <result column="stauts" jdbcType="INTEGER" property="stauts" />
    <result column="repymt_apply_id" jdbcType="BIGINT" property="repymtApplyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, wdrl_id, cus_user_id, term, principal, interest, plan_date, actual_date, penalty, 
    overdue_days, stauts, repymt_apply_id
  </sql>
  <select id="selectByExample" parameterType="com.xingguang.customer.repymt.entity.RepymtPlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repymt_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${limit} offset ${offset}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repymt_plan
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from repymt_plan
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xingguang.customer.repymt.entity.RepymtPlanExample">
    delete from repymt_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xingguang.customer.repymt.entity.RepymtPlan" useGeneratedKeys="true">
    insert into repymt_plan (wdrl_id, cus_user_id, term, 
      principal, interest, plan_date, 
      actual_date, penalty, overdue_days, 
      stauts, repymt_apply_id)
    values (#{wdrlId,jdbcType=BIGINT}, #{cusUserId,jdbcType=BIGINT}, #{term,jdbcType=INTEGER}, 
      #{principal,jdbcType=DECIMAL}, #{interest,jdbcType=DECIMAL}, #{planDate,jdbcType=DATE}, 
      #{actualDate,jdbcType=DATE}, #{penalty,jdbcType=DECIMAL}, #{overdueDays,jdbcType=INTEGER}, 
      #{stauts,jdbcType=INTEGER}, #{repymtApplyId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xingguang.customer.repymt.entity.RepymtPlan" useGeneratedKeys="true">
    insert into repymt_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wdrlId != null">
        wdrl_id,
      </if>
      <if test="cusUserId != null">
        cus_user_id,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="principal != null">
        principal,
      </if>
      <if test="interest != null">
        interest,
      </if>
      <if test="planDate != null">
        plan_date,
      </if>
      <if test="actualDate != null">
        actual_date,
      </if>
      <if test="penalty != null">
        penalty,
      </if>
      <if test="overdueDays != null">
        overdue_days,
      </if>
      <if test="stauts != null">
        stauts,
      </if>
      <if test="repymtApplyId != null">
        repymt_apply_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wdrlId != null">
        #{wdrlId,jdbcType=BIGINT},
      </if>
      <if test="cusUserId != null">
        #{cusUserId,jdbcType=BIGINT},
      </if>
      <if test="term != null">
        #{term,jdbcType=INTEGER},
      </if>
      <if test="principal != null">
        #{principal,jdbcType=DECIMAL},
      </if>
      <if test="interest != null">
        #{interest,jdbcType=DECIMAL},
      </if>
      <if test="planDate != null">
        #{planDate,jdbcType=DATE},
      </if>
      <if test="actualDate != null">
        #{actualDate,jdbcType=DATE},
      </if>
      <if test="penalty != null">
        #{penalty,jdbcType=DECIMAL},
      </if>
      <if test="overdueDays != null">
        #{overdueDays,jdbcType=INTEGER},
      </if>
      <if test="stauts != null">
        #{stauts,jdbcType=INTEGER},
      </if>
      <if test="repymtApplyId != null">
        #{repymtApplyId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xingguang.customer.repymt.entity.RepymtPlanExample" resultType="java.lang.Long">
    select count(*) from repymt_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update repymt_plan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.wdrlId != null">
        wdrl_id = #{record.wdrlId,jdbcType=BIGINT},
      </if>
      <if test="record.cusUserId != null">
        cus_user_id = #{record.cusUserId,jdbcType=BIGINT},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=INTEGER},
      </if>
      <if test="record.principal != null">
        principal = #{record.principal,jdbcType=DECIMAL},
      </if>
      <if test="record.interest != null">
        interest = #{record.interest,jdbcType=DECIMAL},
      </if>
      <if test="record.planDate != null">
        plan_date = #{record.planDate,jdbcType=DATE},
      </if>
      <if test="record.actualDate != null">
        actual_date = #{record.actualDate,jdbcType=DATE},
      </if>
      <if test="record.penalty != null">
        penalty = #{record.penalty,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueDays != null">
        overdue_days = #{record.overdueDays,jdbcType=INTEGER},
      </if>
      <if test="record.stauts != null">
        stauts = #{record.stauts,jdbcType=INTEGER},
      </if>
      <if test="record.repymtApplyId != null">
        repymt_apply_id = #{record.repymtApplyId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update repymt_plan
    set id = #{record.id,jdbcType=BIGINT},
      wdrl_id = #{record.wdrlId,jdbcType=BIGINT},
      cus_user_id = #{record.cusUserId,jdbcType=BIGINT},
      term = #{record.term,jdbcType=INTEGER},
      principal = #{record.principal,jdbcType=DECIMAL},
      interest = #{record.interest,jdbcType=DECIMAL},
      plan_date = #{record.planDate,jdbcType=DATE},
      actual_date = #{record.actualDate,jdbcType=DATE},
      penalty = #{record.penalty,jdbcType=DECIMAL},
      overdue_days = #{record.overdueDays,jdbcType=INTEGER},
      stauts = #{record.stauts,jdbcType=INTEGER},
      repymt_apply_id = #{record.repymtApplyId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xingguang.customer.repymt.entity.RepymtPlan">
    update repymt_plan
    <set>
      <if test="wdrlId != null">
        wdrl_id = #{wdrlId,jdbcType=BIGINT},
      </if>
      <if test="cusUserId != null">
        cus_user_id = #{cusUserId,jdbcType=BIGINT},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=INTEGER},
      </if>
      <if test="principal != null">
        principal = #{principal,jdbcType=DECIMAL},
      </if>
      <if test="interest != null">
        interest = #{interest,jdbcType=DECIMAL},
      </if>
      <if test="planDate != null">
        plan_date = #{planDate,jdbcType=DATE},
      </if>
      <if test="actualDate != null">
        actual_date = #{actualDate,jdbcType=DATE},
      </if>
      <if test="penalty != null">
        penalty = #{penalty,jdbcType=DECIMAL},
      </if>
      <if test="overdueDays != null">
        overdue_days = #{overdueDays,jdbcType=INTEGER},
      </if>
      <if test="stauts != null">
        stauts = #{stauts,jdbcType=INTEGER},
      </if>
      <if test="repymtApplyId != null">
        repymt_apply_id = #{repymtApplyId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xingguang.customer.repymt.entity.RepymtPlan">
    update repymt_plan
    set wdrl_id = #{wdrlId,jdbcType=BIGINT},
      cus_user_id = #{cusUserId,jdbcType=BIGINT},
      term = #{term,jdbcType=INTEGER},
      principal = #{principal,jdbcType=DECIMAL},
      interest = #{interest,jdbcType=DECIMAL},
      plan_date = #{planDate,jdbcType=DATE},
      actual_date = #{actualDate,jdbcType=DATE},
      penalty = #{penalty,jdbcType=DECIMAL},
      overdue_days = #{overdueDays,jdbcType=INTEGER},
      stauts = #{stauts,jdbcType=INTEGER},
      repymt_apply_id = #{repymtApplyId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>